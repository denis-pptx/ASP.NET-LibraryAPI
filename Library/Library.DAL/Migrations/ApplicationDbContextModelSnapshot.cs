// <auto-generated />
using System;
using Library.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Library.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Robert Johnson"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Emily White"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Michael Brown"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Amanda Davis"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Christopher Wilson"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sophia Turner"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Daniel Miller"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Olivia Clark"
                        });
                });

            modelBuilder.Entity("Library.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CaptureDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 3,
                            CaptureDate = new DateTime(2023, 12, 29, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(5),
                            Description = "A thrilling journey through the galaxy.",
                            GenreId = 1,
                            ISBN = "011234567891223",
                            Name = "The Galactic Odyssey",
                            ReturnDate = new DateTime(2024, 2, 27, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(23)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 6,
                            CaptureDate = new DateTime(2024, 1, 8, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(25),
                            Description = "Exploring the realms of love beyond the stars.",
                            GenreId = 2,
                            ISBN = "301234567891423",
                            Name = "Love Beyond Stars",
                            ReturnDate = new DateTime(2024, 3, 8, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(26)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 8,
                            CaptureDate = new DateTime(2024, 1, 18, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(27),
                            GenreId = 8,
                            ISBN = "051234567869123",
                            Name = "Whispers in the Shadows",
                            ReturnDate = new DateTime(2024, 3, 18, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(28)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 6,
                            CaptureDate = new DateTime(2024, 1, 13, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(29),
                            GenreId = 3,
                            ISBN = "012346567891273",
                            Name = "Thrill Seeker",
                            ReturnDate = new DateTime(2024, 3, 3, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(30)
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            CaptureDate = new DateTime(2024, 1, 3, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(31),
                            GenreId = 10,
                            ISBN = "01234567899123",
                            Name = "Realm of Dreams",
                            ReturnDate = new DateTime(2024, 3, 13, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(31)
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 8,
                            CaptureDate = new DateTime(2024, 1, 23, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(33),
                            GenreId = 2,
                            ISBN = "012345367891523",
                            Name = "Time Traveler's Journal",
                            ReturnDate = new DateTime(2024, 3, 23, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(33)
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 9,
                            CaptureDate = new DateTime(2024, 1, 16, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(35),
                            GenreId = 9,
                            ISBN = "012234567189123",
                            Name = "Inspirations",
                            ReturnDate = new DateTime(2024, 3, 10, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(35)
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 9,
                            CaptureDate = new DateTime(2024, 1, 10, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(36),
                            GenreId = 4,
                            ISBN = "012345679289123",
                            Name = "Verses of the Soul",
                            ReturnDate = new DateTime(2024, 3, 16, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(37)
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 3,
                            CaptureDate = new DateTime(2024, 1, 20, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(38),
                            GenreId = 2,
                            ISBN = "01234597566789123",
                            Name = "Wonders of Science",
                            ReturnDate = new DateTime(2024, 3, 6, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(39)
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 6,
                            CaptureDate = new DateTime(2024, 1, 6, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(40),
                            GenreId = 1,
                            ISBN = "240123456789123",
                            Name = "The Power Within",
                            ReturnDate = new DateTime(2024, 2, 29, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(40)
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 4,
                            CaptureDate = new DateTime(2023, 12, 24, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(42),
                            Description = "An epic adventure with twists and turns.",
                            GenreId = 2,
                            ISBN = "012683456789123",
                            Name = "Epic Journey",
                            ReturnDate = new DateTime(2024, 2, 22, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(42)
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 9,
                            CaptureDate = new DateTime(2024, 1, 13, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(43),
                            Description = "A magical tale of enchanted love.",
                            GenreId = 7,
                            ISBN = "0123456789124123",
                            Name = "Enchanted Love",
                            ReturnDate = new DateTime(2024, 2, 27, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(44)
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 2,
                            CaptureDate = new DateTime(2024, 1, 3, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(45),
                            GenreId = 10,
                            ISBN = "0123459856789123",
                            Name = "Secrets Unveiled",
                            ReturnDate = new DateTime(2024, 3, 8, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(46)
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 7,
                            CaptureDate = new DateTime(2024, 1, 8, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(47),
                            GenreId = 5,
                            ISBN = "0121453456789123",
                            Name = "Mind Games",
                            ReturnDate = new DateTime(2024, 3, 3, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(47)
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 6,
                            CaptureDate = new DateTime(2023, 12, 29, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(48),
                            GenreId = 5,
                            ISBN = "0123484567891232",
                            Name = "Mythical Realms",
                            ReturnDate = new DateTime(2024, 3, 13, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(49)
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 7,
                            CaptureDate = new DateTime(2024, 1, 18, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(50),
                            GenreId = 1,
                            ISBN = "01234567891236412",
                            Name = "Era of Kings",
                            ReturnDate = new DateTime(2024, 3, 18, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(51)
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 7,
                            CaptureDate = new DateTime(2024, 1, 6, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(52),
                            GenreId = 4,
                            ISBN = "1240123456789123",
                            Name = "Journey to Enlightenment",
                            ReturnDate = new DateTime(2024, 2, 29, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(52)
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 6,
                            CaptureDate = new DateTime(2024, 1, 10, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(54),
                            GenreId = 8,
                            ISBN = "0122345637189123",
                            Name = "Whispers of Nature",
                            ReturnDate = new DateTime(2024, 3, 6, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(54)
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 7,
                            CaptureDate = new DateTime(2024, 1, 16, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(55),
                            GenreId = 8,
                            ISBN = "10122324567891623",
                            Name = "Scientific Discoveries",
                            ReturnDate = new DateTime(2024, 3, 10, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(56)
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 6,
                            CaptureDate = new DateTime(2024, 1, 20, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(57),
                            Description = "Embark on a mindful journey of self-discovery.",
                            GenreId = 3,
                            ISBN = "0123456789123555",
                            Name = "The Mindful Journey",
                            ReturnDate = new DateTime(2024, 3, 16, 23, 6, 39, 288, DateTimeKind.Local).AddTicks(58)
                        });
                });

            modelBuilder.Entity("Library.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Self-Help"
                        });
                });

            modelBuilder.Entity("Library.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            PasswordHash = "$2a$11$fJlETe9LRWppe9/hAhuURuhh1f861OhsUeth8geFDW6k3k4BwMbMS"
                        });
                });

            modelBuilder.Entity("Library.Domain.Entities.Book", b =>
                {
                    b.HasOne("Library.Domain.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Library.Domain.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
